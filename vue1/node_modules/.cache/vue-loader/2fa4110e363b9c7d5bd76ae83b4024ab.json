{"remainingRequest":"C:\\Users\\lenovo\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\lenovo\\Documents\\VUE\\vue1\\Puzzle.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\lenovo\\Documents\\VUE\\vue1\\Puzzle.vue","mtime":1568980147830},{"path":"C:\\Users\\lenovo\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\lenovo\\AppData\\Roaming\\npm\\node_modules\\@vue\\cli-service-global\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\r\n.puzzle {\r\n  position: relative;\r\n  border: 2px solid #ccc;\r\n}\r\n\r\n.puzzle—bar {\r\n  position: absolute;\r\n  box-sizing: border-box;\r\n  border: 1px solid #fff;\r\n  transition: all 0.5s;\r\n}\r\n",{"version":3,"sources":["Puzzle.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2IA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"Puzzle.vue","sourceRoot":".","sourcesContent":["<template>\r\n  <div class=\"puzzle\" :style=\"{width:width+'px',height:height+'px'}\">\r\n    <div\r\n      class=\"puzzle—bar\"\r\n      v-for=\"(item,index) in blockPoints\"\r\n      :key=\"item.id\"\r\n      :style=\"{width:blockWidth+'px',\r\n     height:blockHeight+'px',\r\n     left:item.x+'px',\r\n     top:item.y+'px',\r\n     backgroundImage:`url(${img})`,\r\n     backgroundPosition:`-${correctPoints[index].x}px -${correctPoints[index].y}px`,\r\n     opacity:index === blockPoints.length-1&&0 //设置透明度为0\r\n     }\"\r\n      @click=\"handleClick\"\r\n      :ref=\"index === blockPoints.length- 1 ?'empty' : 'block'\"\r\n      :data-correctX=\"correctPoints[index].x\"\r\n      :data-correctY=\"correctPoints[index].y\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    width: {\r\n      type: Number,\r\n      default: 500\r\n    },\r\n    height: {\r\n      type: Number,\r\n      default: 500\r\n    },\r\n    row: {\r\n      type: Number,\r\n      default: 3\r\n    },\r\n    col: {\r\n      type: Number,\r\n      default: 3\r\n    },\r\n    img: {\r\n      type: String,\r\n      required: true\r\n    }\r\n  },\r\n  computed: {\r\n    blockWidth() {\r\n      return this.width / this.col;\r\n    },\r\n    blockHeight() {\r\n      return this.height / this.row;\r\n    },\r\n    correctPoints() {\r\n      const { row, col, blockWidth, blockHeight } = this;\r\n      const arr = [];\r\n      for (let i = 0; i < row; i++) {\r\n        for (let j = 0; j < col; j++) {\r\n          arr.push({\r\n            x: j * blockWidth,\r\n            y: i * blockHeight,\r\n            id: new Date().getTime() + Math.random() * 100\r\n          });\r\n        }\r\n      }\r\n      return arr;\r\n    },\r\n    blockPoints() {\r\n      const points = this.correctPoints;\r\n      const length = points.length;\r\n      const lastEle = points[length - 1];\r\n      const newArr = [...points];\r\n      newArr.length = length - 1;\r\n      newArr.sort(() => Math.random() - 0.5); //随机打乱位置\r\n      newArr.push(lastEle);\r\n      return newArr;\r\n    }\r\n  },\r\n  methods: {\r\n    handleClick(e) {\r\n      const blockDom = e.target;\r\n      const emptyDom = this.$refs.empty[0];\r\n      // if (!this.isAdjacent(blockDom, emptyDom)) {\r\n      //   return;\r\n      // }\r\n      const { left, top } = blockDom.style;\r\n      blockDom.style.left = emptyDom.style.left;\r\n      blockDom.style.top = emptyDom.style.top;\r\n      emptyDom.style.left = left;\r\n      emptyDom.style.top = top;\r\n      const winFlag = this.checkWin();\r\n      if (winFlag) {\r\n        this.winGame(emptyDom);\r\n      }\r\n    },\r\n    isAdjacent(blockDom, emptyDom) {\r\n      const { left: domLeft, top: domTop, width, height } = blockDom.style;\r\n      const { left: emptyLeft, top: emptyTop } = emptyDom.style;\r\n      const xDis = Math.floor(\r\n        Math.abs(parseFloat(domLeft) - parseFloat(emptyLeft))\r\n      ); //把px去掉再拿绝对值再向下取整\r\n      const yDis = Math.floor(\r\n        Math.abs(parseFloat(domTop) - parseFloat(emptyTop))\r\n      );\r\n      const flag =\r\n        (domLeft === emptyLeft && yDis === parseInt(height)) ||\r\n        (domTop === emptyTop && xDis === parseInt(width));\r\n      return flag;\r\n    },\r\n    checkWin() {\r\n      const blockDomArr = this.$refs.block; //拿到不是空白小方块组成的数组\r\n\r\n      return blockDomArr.every(dom => {\r\n        const { left: domLeft, top: domTop } = dom.style;\r\n        const { correctx: correctX, correcty: correctY } = dom.dataset;\r\n        const flag =\r\n          parseInt(domLeft) === parseInt(correctX) &&\r\n          parseInt(domTop) === parseInt(correctY);\r\n        return flag;\r\n      });\r\n     \r\n    },\r\n    winGame(emptyDom) {\r\n      setTimeout(() => {\r\n        alert(\"杨幂\");\r\n        emptyDom.style.opacity = 1;\r\n        this.goToNextLevel();\r\n      }, 500);\r\n    },\r\n    goToNextLevel(){\r\n      const answerFlag= window.confirm('要玩下一关吗？');\r\n      if(answerFlag){\r\n        this.$emit('next');\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>>\r\n<style >\r\n.puzzle {\r\n  position: relative;\r\n  border: 2px solid #ccc;\r\n}\r\n\r\n.puzzle—bar {\r\n  position: absolute;\r\n  box-sizing: border-box;\r\n  border: 1px solid #fff;\r\n  transition: all 0.5s;\r\n}\r\n</style>"]}]}